apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-management-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portfolio-management
  template:
    metadata:
      labels:
        app: portfolio-management
    spec:
      containers:
        - name: portfolio-management-v2 
          image: REGISTRY_HOSTNAME/agri-os-prod/IMAGE:GITHUB_SHA
          ports:
          - containerPort: 80
          # ... other container configuration
      #     env:
      #     - name: DB_USER
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: DB_USER
      #     - name: DB_PASSWORD
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: DB_PASSWORD
      #     - name: DB_DATABASE
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: DB_DATABASE
      #     - name: SECRET_KEY
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: SECRET_KEY
      #     - name: LOG_FORMAT
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: LOG_FORMAT
      #     - name: LOG_DIR
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: LOG_DIR
      #     - name: ORIGIN
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: ORIGIN
      #     - name: CREDENTIALS
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: CREDENTIALS
                
      #     - name: NODE_ENV
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-stage-env
      #           key: staging-env
      #     - name: PORT
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-stage-env
      #           key: staging-port
      #     - name: DB_PORT
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: DB_PORT
      #     - name: DB_HOST
      #       valueFrom:
      #         secretKeyRef:
      #           name: agricos-db-ip
      #           key: db-host-ip

      #     - name: GCS_BUCKET
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: GCS_BUCKET

      #     - name: GCS_PROJECT_ID
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: GCS_PROJECT_ID

      #     - name: GCS_PRIVATE_KEY
      #       valueFrom:
      #         secretKeyRef:
      #           name: storage-bucket-key
      #           key: GCS_PRIVATE_KEY

      #     - name: GCS_AUDIOS_PATH
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: GCS_AUDIOS_PATH

      #     - name: GCS_CLIENT_EMAIL
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: GCS_CLIENT_EMAIL

      #     - name: GCS_PICTURES_PATH
      #       valueFrom:
      #         secretKeyRef:
      #           name: portfolio-management-db-secret
      #           key: GCS_PICTURES_PATH
                
      #     - name: GCS_PAYMENT_COLLECTION_PATH
      #       valueFrom:
      #         secretKeyRef:
      #           name: gcs-payment
      #           key: GCS_PAYMENT_COLLECTION_PATH     
                
      #     - name: MESSAGE_SERVICE
      #       valueFrom:
      #         secretKeyRef:
      #           name: message-service-portfolio
      #           key: MESSAGE_SERVICE

      #     - name: RECRUITMENT_BASE_URL
      #       valueFrom:
      #         secretKeyRef:
      #           name: recruitment-urls
      #           key: recruitment_base_url

      #     - name: FARMING_BASE_URL
      #       valueFrom:
      #         secretKeyRef:
      #           name: farming-urls
      #           key: FARMING_BASE_URL

      #     - name: PLANNING_BASE_URL
      #       valueFrom:
      #         secretKeyRef:
      #           name: planning-urls
      #           key: PLANNING_BASE_URL

      #     - name: SSO_BASE_URL
      #       valueFrom:
      #         secretKeyRef:
      #           name: sso-url
      #           key: SSO_BASE_URL      

      # #   - name: cloud-sql-proxy
      # #     # It is recommended to use the latest version of the Cloud SQL proxy
      # #     # Make sure to update on a regular schedule!
      # #     image: gcr.io/cloudsql-docker/gce-proxy:1.17
      # #     command:
      # #       - "/cloud_sql_proxy"

      # #       # If connecting from a VPC-native GKE cluster, you can use the
      # #       # following flag to have the proxy connect over private IP
      # #       # - "-ip_address_types=PRIVATE"

      # #       # Replace DB_PORT with the port the proxy should listen on
      # #       # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
      # #       - "-instances=bg-dev-326309:europe-west3:dev-sql-instance=tcp:0.0.0.0:3306"

      # #       # This flag specifies where the service account key can be found
      # #       - "-credential_file=/secrets/cloudsql/service_account.json"
      # #     securityContext:
      # #       # The default Cloud SQL proxy image runs as the
      # #       # "nonroot" user and group (uid: 65532) by default.
      # #       runAsNonRoot: true
      # #     volumeMounts:
      # #     - name: sa-secrets
      # #       mountPath: /secrets/cloudsql
      # #       readOnly: true
      # #     # Resource configuration depends on an application's requirements. You
      # #     # should adjust the following values based on what your application
      # #     # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
      # #     # resources:
      # #     #   requests:
      # #     #     # The proxy's memory use scales linearly with the number of active
      # #     #     # connections. Fewer open connections will use less memory. Adjust
      # #     #     # this value based on your application's requirements.
      # #     #     memory: "2Gi"
      # #     #     # The proxy's CPU use scales linearly with the amount of IO between
      # #     #     # the database and the application. Adjust this value based on your
      # #     #     # application's requirements.
      # #     #     cpu:    "1"
      # # volumes:
      # # - name: sa-secrets
      # #   secret:
      # #     secretName: sa-secrets
